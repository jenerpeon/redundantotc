#!/usr/bin/env bash

## BOOTSTRAP ##
source "$( cd "${BASH_SOURCE[0]%/*}" && pwd )/lib/oo-framework.sh"

import lib/type-core
import lib/system/00_log
import lib/lars/logger
import lib/lars/check
import lib/lars/test_con

MASTER=""
SLAVE=""
U_SLAVE=""
U_MASTER=""
SSH_KEY="~/.ssh/id_rsa.pub"
      
init_ssh () {
    for i in "${U_MASTER}@${MASTER}" "${U_SLAVE}@${SLAVE}"; do 
        #copy your own key to allow access to the servers
        ssh -q $i \
            "[[ ! -f /home/vagrant/.ssh/authorized_keys ]] \
            && touch ~/.ssh/authorized_keys"
        cat $SSH_KEY | ssh $i "cat >> ~/.ssh/authorized_keys"  
        cat $SSH_KEY | ssh -q $i "sudo bash -c \"cat >> /root/.ssh/authorized_keys\""
        check -f $? "init_ssh" "key authorized"
        #lookup if root keys exist.
        ssh $i \
            "[[ -f /home/vagrant/.ssh/id_rsa.pub ]]"
        check --cf $? "init_ssh" "${i} key"
        #copy root key
    done
}
    
install_slave () {
    rsync -Ral Slave 'root@'${SLAVE}:/opt/
    check -f $? "install_slave" "rsync"
}

install_master () {
    rsync -Ral Master 'root@'${MASTER}:/opt/
    check -f $? "install_master" "rsync"
}

while [[ $# > 1 ]]
do
    key="$1"

    case $key in
        -h|--help)
            echo -e "synopsis: install File [option]"
            shift
        ;;
        -i|--init)
            init_ssh $2
            shift
        ;;
        --key)
            eval "SSH_KEY=$2"
            shift
        ;;
        --umaster)
            eval "U_MASTER=$2"
            shift
        ;;
        --uslave)
            eval "U_SLAVE=$2"
            shift
        ;;
        --ipmaster)
            eval "MASTER=$2"
            shift
        ;;
        --ipslave)
            eval "SLAVE=$2"
            shift
        ;;
        *)
            echo "parameter not known. -h | --help for manual"
        ;;
    esac
    shift
done

init_ssh
install_slave
install_master
